#summary Generating GraphML from an N-triples (RDF) file
#labels GraphML

= Introduction =

At the lowest level the semantic Web is built on the Resource Description Framework (RDF). RDF is a graph model. It would be expected that a wide range of network analytical tools could be directly applied to a RDF data set. However, most network algorithms assume that a graph does not have parallel edges which the RDF model allows. The challenge is to pull out simpler graphs from the RDF "[hairball http://link.informatics.stonybrook.edu/rxnorm/RXAUI/2982568]" for analysis. Py-triple-simple can generate GraphML file from a N-triples file. GraphML, an XML based format, is a standard for graph interchange. In this example we will generate a publication co-authorship network from an RDF dump of a VIVO site.

= Details =

To understand how to go from an RDF N-triples to a GraphML file the code in the script [generate_coauthor_graph.py http://code.google.com/p/sbu-mi-vivo-tools/source/browse/trunk/generate_coauthor_graph.py] will be explained.

The first step will be to open and load the N-triples file into memory.
{{{
from pyTripleSimple import SimpleTripleStore
ts = SimpleTripleStore()
f = open(file_name)
print("Loading triples")
ts.load_ntriples(f)
f.close()
}}}
The next step is to initialize the class for converting a SimpleTripleStore instance to a graph model.
{{{
graph_obj = ExtractGraphFromSimpleTripleStore(ts)
graph_obj.register_label()
}}}

In order to accurately model information for the application the VIVO ontology is more complex than initially one expects. It is not always the case that a single link needs to be traversed but a longer path will need to be followed. To generate a co-authorship network where we link faculty who have shared publications we need to traverse several triples and condense this into a single link.
[http://dl.dropbox.com/u/21690634/vivo-authorship-link.png]
In SPARQL this type of construction can be done with a construct statement but we still have the difficulty when we want to analyze the graph.

 